library ieee;
use ieee.std_logic_1164.all;

entity Mux4 is
  generic( k : integer := 1 );
  port( a3, a2, a1, a0 : in std_logic_vector( k-1 downto 0 );
        s : in std_logic_vector( 3 downto 0 );
        b : out std_logic_vector( k-1 downto 0 ) );
end Mux4;

architecture impl of Mux4 is
begin
 p_choice: process (sl_Clock_int, sl_resetn_int, slv_selection_int)
   begin
      if (sl_resetn_int = '0') then
         sl_coffee_int			<= '0';
         sl_cappuccino_int		<= '0';
         sl_espresso_int		<= '0';
         sl_hot_chocolate_int	<= '0';
      elsif(rising_edge(sl_Clock_int)) then
         if(sl_fsm_ready_int = '1') then
            case slv_selection_int is
               when "1110" => sl_coffee_int 			   <=	   '1'; -- 1 more buttons for use
               when "1101" => sl_cappuccino_int			<= 	'1'; -- 2 more buttons for use
               when "1011" => sl_espresso_int			<= 	'1'; -- 3 more buttons for use
               when "0111" => sl_hot_chocolate_int		<= 	'1'; -- 4 more buttons for use
					
--					when "0110" => sl_hot_chocolate_int		<= 	'1'; -- 5 more buttons for snacks
--					when "0101" => sl_hot_chocolate_int		<= 	'1'; -- 6 more buttons for Food
--					when "0011" => sl_hot_chocolate_int		<= 	'1'; -- 7 more buttons for anoter drink
--					when "0010" => sl_hot_chocolate_int		<= 	'1'; -- 8 more buttons for use
--					when "0001" => sl_hot_chocolate_int		<= 	'1'; -- 9 more buttons for use
--					when "0000" => sl_hot_chocolate_int		<= 	'1'; -- 10 more buttons for use
               when others => null;
            end case;
         end if;
         if(sl_fsm_done_int = '1') then
            sl_coffee_int			<= '0';
            sl_cappuccino_int		<= '0';
            sl_espresso_int			<= '0';
            sl_hot_chocolate_int	<= '0';
         end if;
      end if;
   end process p_choice;
end impl;